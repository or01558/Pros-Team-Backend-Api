import { Buffer } from './buffer';
import createHash, { Hash } from './crypto/createHash';
import Hmac from './crypto/Hmac';
import { Readable, Writable, Transform, PassThrough, Duplex } from './stream';
export declare function randomBytes(size: number): Buffer;
export declare function getHashes(): string[];
export declare function createHmac(alg: string, key: string | Buffer): Hmac;
export declare type Resolver = undefined;
export declare function createResolver(): Resolver | undefined;
declare const nativeFetch: typeof fetch;
declare const nativeWS: {
    new (url: string, protocols?: string | string[] | undefined): WebSocket;
    prototype: WebSocket;
    readonly CLOSED: number;
    readonly CLOSING: number;
    readonly CONNECTING: number;
    readonly OPEN: number;
};
declare const nativeRTCPeerConnection: RTCPeerConnection | undefined;
export declare const name = "browser";
export { Buffer, createHash, Hash, Hmac, nativeFetch as fetch, nativeRTCPeerConnection as RTCPeerConnection, nativeWS as WebSocket, Readable, Writable, Transform, Duplex, PassThrough };
