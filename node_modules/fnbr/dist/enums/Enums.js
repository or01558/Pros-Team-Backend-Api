"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.STWSchematicEvoType = exports.STWSchematicAlterationRarity = exports.STWSchematicSubType = exports.STWHeroType = exports.PresenceOnlineType = exports.STWLeadSynergy = exports.SeasonEnd = exports.SeasonStart = exports.DefaultSkin = exports.Gamemode = exports.Language = exports.Playlist = exports.Platform = exports.PartyPrivacy = void 0;
exports.PartyPrivacy = Object.freeze({
    PUBLIC: {
        partyType: 'Public',
        inviteRestriction: 'AnyMember',
        onlyLeaderFriendsCanJoin: false,
        presencePermission: 'Anyone',
        invitePermission: 'Anyone',
        acceptingMembers: true,
    },
    FRIENDS_ALLOW_FRIENDS_OF_FRIENDS: {
        partyType: 'FriendsOnly',
        inviteRestriction: 'AnyMember',
        onlyLeaderFriendsCanJoin: false,
        presencePermission: 'Anyone',
        invitePermission: 'AnyMember',
        acceptingMembers: true,
    },
    FRIENDS: {
        partyType: 'FriendsOnly',
        inviteRestriction: 'LeaderOnly',
        onlyLeaderFriendsCanJoin: true,
        presencePermission: 'Leader',
        invitePermission: 'Leader',
        acceptingMembers: false,
    },
    PRIVATE_ALLOW_FRIENDS_OF_FRIENDS: {
        partyType: 'Private',
        inviteRestriction: 'AnyMember',
        onlyLeaderFriendsCanJoin: false,
        presencePermission: 'Noone',
        invitePermission: 'AnyMember',
        acceptingMembers: false,
    },
    PRIVATE: {
        partyType: 'Private',
        inviteRestriction: 'LeaderOnly',
        onlyLeaderFriendsCanJoin: true,
        presencePermission: 'Noone',
        invitePermission: 'Leader',
        acceptingMembers: false,
    },
});
exports.Platform = Object.freeze({
    WINDOWS: 'WIN',
    MAC: 'MAC',
    PLAYSTATION: 'PSN',
    XBOX: 'XBL',
    SWITCH: 'SWT',
    IOS: 'IOS',
    ANDROID: 'AND',
    XBOX_SERIES_X: 'XSX',
    PLAYSTATION_5: 'PS5',
});
exports.Playlist = Object.freeze({
    SOLO: {
        playlistName: 'Playlist_DefaultSolo',
        tournamentId: '',
        eventWindowId: '',
    },
    DUO: {
        playlistName: 'Playlist_DefaultDuo',
        tournamentId: '',
        eventWindowId: '',
    },
    SQUAD: {
        playlistName: 'Playlist_DefaultSquad',
        tournamentId: '',
        eventWindowId: '',
    },
    CREATIVE: {
        playlistName: 'Playlist_PlaygroundV2',
        tournamentId: '',
        eventWindowId: '',
    },
    CREATIVE_PLAY: {
        playlistName: 'Playlist_Creative_PlayOnly',
        tournamentId: '',
        eventWindowId: '',
    },
});
exports.Language = Object.freeze({
    ARABIC: 'ar',
    GERMAN: 'de',
    ENGLISH: 'en',
    SPANISH: 'es',
    FRENCH: 'fr',
    ITALIAN: 'it',
    JAPANESE: 'ja',
    POLISH: 'pl',
    RUSSIAN: 'ru',
    TURKISH: 'tr',
});
exports.Gamemode = Object.freeze({
    BATTLE_ROYALE: 'battleroyale',
    CREATIVE: 'creative',
    SAVE_THE_WORLD: 'savetheworld',
});
exports.DefaultSkin = Object.freeze({
    FEMALE_1: 'CID_556_Athena_Commando_F_RebirthDefaultA',
    FEMALE_2: 'CID_557_Athena_Commando_F_RebirthDefaultB',
    FEMALE_3: 'CID_558_Athena_Commando_F_RebirthDefaultC',
    FEMALE_4: 'CID_559_Athena_Commando_F_RebirthDefaultD',
    MALE_1: 'CID_560_Athena_Commando_M_RebirthDefaultA',
    MALE_2: 'CID_561_Athena_Commando_M_RebirthDefaultB',
    MALE_3: 'CID_562_Athena_Commando_M_RebirthDefaultC',
    MALE_4: 'CID_563_Athena_Commando_M_RebirthDefaultD',
});
exports.SeasonStart = Object.freeze({
    CH1_S1: 1508889601,
    CH1_S2: 1513209601,
    CH1_S3: 1519257601,
    CH1_S4: 1525132801,
    CH1_S5: 1531353601,
    CH1_S6: 1538006401,
    CH1_S7: 1544054401,
    CH1_S8: 1551312001,
    CH1_S9: 1557360001,
    CH1_S10: 1564617601,
    CH2_S1: 1571097601,
    CH2_S2: 1582156801,
    CH2_S3: 1592352001,
    CH2_S4: 1598486401,
    CH2_S5: 1606867201,
    CH2_S6: 1615852801,
    CH2_S7: 1623110401,
    CH2_S8: 1631491201,
    CH3_S1: 1638662401,
});
exports.SeasonEnd = Object.freeze({
    CH1_S1: 1513123200,
    CH1_S2: 1519171200,
    CH1_S3: 1525046400,
    CH1_S4: 1531353600,
    CH1_S5: 1538006400,
    CH1_S6: 1544054400,
    CH1_S7: 1551312000,
    CH1_S8: 1557360000,
    CH1_S9: 1564617600,
    CH1_S10: 1570924800,
    CH2_S1: 1582156800,
    CH2_S2: 1592352000,
    CH2_S3: 1598486400,
    CH2_S4: 1606867200,
    CH2_S5: 1615852800,
    CH2_S6: 1623110400,
    CH2_S7: 1631491200,
    CH2_S8: 1638662400,
});
exports.STWLeadSynergy = Object.freeze({
    trainingteam: 'IsTrainer',
    fireteamalpha: 'IsSoldier',
    closeassaultsquad: 'IsMartialArtist',
    thethinktank: 'IsInventor',
    emtsquad: 'IsDoctor',
    corpsofengineering: 'IsEngineer',
    scoutingparty: 'IsExplorer',
    gadgeteers: 'IsGadgeteer',
});
exports.PresenceOnlineType = Object.freeze({
    ONLINE: 'online',
    CHAT: 'chat',
    AWAY: 'away',
    EXTENDED_AWAY: 'xa',
    DO_NOT_DISTURB: 'dnd',
});
exports.STWHeroType = Object.freeze({
    SOLDIER: 'commando',
    CONSTRUCTOR: 'constructor',
    OUTLANDER: 'outlander',
    NINJA: 'ninja',
});
exports.STWSchematicSubType = Object.freeze({
    ASSAULT: 'assault',
    LAUNCHER: 'launcher',
    PISTOL: 'pistol',
    SHOTGUN: 'shotgun',
    SMG: 'smg',
    SNIPER: 'sniper',
    CLUB: 'blunt',
    HARDWARE: 'blunt_hammer',
    AXE: 'edged_axe',
    SCYTHE: 'edged_scythe',
    SWORD: 'edged_sword',
    SPEAR: 'piercing_spear',
    CEILING_TRAP: 'ceiling',
    FLOOR_TRAP: 'floor',
    WALL_TRAP: 'wall',
});
exports.STWSchematicAlterationRarity = Object.freeze({
    COMMON: 'common',
    UNCOMMON: 'uncommon',
    RARE: 'rare',
    EPIC: 'epic',
    LEGENDARY: 'legendary',
});
exports.STWSchematicEvoType = Object.freeze({
    ORE: 'ore',
    CRYSTAL: 'crystal',
});
exports.default = Object.freeze({
    PartyPrivacy: exports.PartyPrivacy,
    Platform: exports.Platform,
    Playlist: exports.Playlist,
    Language: exports.Language,
    Gamemode: exports.Gamemode,
    DefaultSkin: exports.DefaultSkin,
    SeasonStart: exports.SeasonStart,
    SeasonEnd: exports.SeasonEnd,
    STWLeadSynergy: exports.STWLeadSynergy,
    PresenceOnlineType: exports.PresenceOnlineType,
    STWHeroType: exports.STWHeroType,
    STWSchematicSubType: exports.STWSchematicSubType,
    STWSchematicAlterationRarity: exports.STWSchematicAlterationRarity,
    STWSchematicEvoType: exports.STWSchematicEvoType,
});
//# sourceMappingURL=Enums.js.map