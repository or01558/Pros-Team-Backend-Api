import Client from '../../client/Client';
import Base from '../../client/Base';
import { STWProfileStatsData } from '../../../resources/httpResponses';
import { STWStatsNodeCostsData, STWStatsBRLoadoutData, STWStatsSTWLoadoutData, STWStatsMissionAlertRedemptionData, STWStatsQuestData, STWStatsGameplayStatData, STWStatsClientSettingsData, STWStatsResearchLevelsData, STWStatsDailyRewardsData, STWStatsEventCurrencyData, STWStatsXPData } from '../../../resources/structs';
/**
 * Represents a Save The World profile's stats
 */
declare class STWStats extends Base {
    /**
     * The profile's node costs
     */
    nodeCosts: STWStatsNodeCostsData;
    /**
     * The profile's Save The World loadout data
     */
    stwLoadout: STWStatsSTWLoadoutData;
    /**
     * The profile's Battle Royale loadout data
     */
    brLoadout: STWStatsBRLoadoutData;
    /**
     * The profile's mission alert redemption record
     */
    missionAlertRedemptionRecord?: STWStatsMissionAlertRedemptionData[];
    /**
     * The profile's amount of rewards claimed post max level
     */
    rewardsClaimedPostMaxLevel: number;
    /**
     * The profile's collection book max XP level
     */
    collectionBookMaxXPLevel?: number;
    /**
     * Whether the profile has claimed the MFA reward
     */
    mfaRewardClaimed: boolean;
    /**
     * The profile's quests data
     */
    quests?: STWStatsQuestData;
    /**
     * The profile's amount of legacy research points spent
     */
    legacyResearchPointsSpent: number;
    /**
     * The profile's gameplay stats
     */
    gameplayStats: STWStatsGameplayStatData[];
    /**
     * The profile's unslot mtx spend
     */
    unslotMtxSpend: number;
    /**
     * The profile's client settings
     */
    clientSettings: STWStatsClientSettingsData;
    /**
     * The profile's research levels
     */
    researchLevels?: STWStatsResearchLevelsData;
    /**
     * The profile's level (max is 310)
     */
    level: number;
    /**
     * The profile's latent XP marker
     */
    latentXpMarker: string;
    /**
     * The profile's event currency
     */
    eventCurrency?: STWStatsEventCurrencyData;
    /**
     * The profile's inventory limit bonus
     */
    inventoryLimitBonus: number;
    /**
     * The profile's amount of matches played
     */
    matchesPlayed: number;
    /**
     * The profile's xp data
     */
    xp: STWStatsXPData;
    /**
     * The profile's daily rewards data
     */
    dailyRewards?: STWStatsDailyRewardsData;
    /**
     * The profile's amount of packs granted
     */
    packsGranted: number;
    /**
     * @param client The main client
     * @param data The stats data
     */
    constructor(client: Client, data: STWProfileStatsData);
    /**
     * The profile's actual account level (ignoring the max level cap of 310)
     */
    get actualLevel(): number;
}
export default STWStats;
