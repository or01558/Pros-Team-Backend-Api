"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const defaultPartyMemberMeta_json_1 = tslib_1.__importDefault(require("../../resources/defaultPartyMemberMeta.json"));
const Util_1 = require("../util/Util");
const PartyMemberMeta_1 = tslib_1.__importDefault(require("./PartyMemberMeta"));
/**
 * Represents the client's party member meta
 */
class ClientPartyMemberMeta extends PartyMemberMeta_1.default {
    /**
     * @param member The party member
     * @param schema The schema
     */
    constructor(member, schema) {
        super({ ...defaultPartyMemberMeta_json_1.default });
        this.member = member;
        const defaultCharacter = (0, Util_1.getRandomDefaultCharacter)();
        this.update({
            'Default:AthenaCosmeticLoadout_j': JSON.stringify({
                AthenaCosmeticLoadout: {
                    characterDef: `AthenaCharacterItemDefinition'/Game/Athena/Items/Cosmetics/Characters/${defaultCharacter}.${defaultCharacter}'`,
                    characterEKey: '',
                    backpackDef: 'None',
                    backpackEKey: '',
                    pickaxeDef: 'AthenaPickaxeItemDefinition\'/Game/Athena/Items/Cosmetics/Pickaxes/DefaultPickaxe.DefaultPickaxe\'',
                    pickaxeEKey: '',
                    contrailDef: 'None',
                    contrailEKey: '',
                    scratchpad: [],
                    cosmeticStats: [{
                            statName: 'TotalVictoryCrowns',
                            statValue: 0,
                        }, {
                            statName: 'TotalRoyalRoyales',
                            statValue: 0,
                        }],
                },
            }),
            'Default:CampaignHero_j': JSON.stringify({
                CampaignHero: {
                    heroItemInstanceId: '',
                    heroType: `/Game/Athena/Heroes/${defaultCharacter.replace('CID', 'HID')}.${defaultCharacter.replace('CID', 'HID')}`,
                },
            }),
            'Default:PlatformData_j': JSON.stringify({
                PlatformData: {
                    platform: {
                        platformDescription: {
                            name: member.client.config.platform,
                            platformType: 'DESKTOP',
                            onlineSubsystem: 'None',
                            sessionType: '',
                            externalAccountType: '',
                            crossplayPool: 'DESKTOP',
                        },
                    },
                    uniqueId: 'INVALID',
                    sessionId: '',
                },
            }),
        }, true);
        if (schema)
            this.update(schema, true);
    }
}
exports.default = ClientPartyMemberMeta;
//# sourceMappingURL=ClientPartyMemberMeta.js.map