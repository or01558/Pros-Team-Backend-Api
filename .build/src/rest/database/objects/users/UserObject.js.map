{
  "version": 3,
  "sources": ["../../../../../../src/rest/database/objects/users/UserObject.ts"],
  "sourcesContent": ["import Data_Structures from \"../../../../../Data-Structures/src/index.js\";\r\nimport Generator from \"../../../../generators/Generator.js\";\r\nimport DBObject, { Reference } from \"../../classes/DBObject.js\";\r\nimport ProfileObject from \"./profiles/ProfileObject.js\";\r\nimport UserRoleObject from \"./UserRoleObject.js\";\r\n\r\nexport enum STATUSS {\r\n    ONLINE = \"online\",\r\n    OFFLINE = \"offline\",\r\n    AFK = \"afk\",\r\n    DND = \"do not disturb\",\r\n};\r\n\r\nexport interface UserActivity {\r\n    name?: string;\r\n    type?: number;\r\n    id?: string;\r\n    icon?: string;\r\n    image?: string;\r\n    banner?: string;\r\n    timeSpent?: string;\r\n    user?: string;\r\n};\r\n\r\nexport interface User {\r\n    [key: string]: any;\r\n    username: string;\r\n    password: string;\r\n    email: string;\r\n    bot?: boolean;\r\n    profile?: ProfileObject;\r\n    roles?: Data_Structures.List<UserRoleObject>;\r\n    status?: STATUSS;\r\n    activity?: UserActivity | { datatype: \"activities\", value: UserActivity };\r\n};\r\n\r\n\r\nexport interface UserData {\r\n    id: string | null;\r\n    properties?: User | Data_Structures.IObjectKeys;\r\n};\r\n\r\nexport default class UserObject extends DBObject<UserObject, User> {\r\n\r\n    private username: string;\r\n\r\n    public static createFrom({ id = null, properties = {} }: UserData, state?: string): UserObject {\r\n        return new UserObject(id, properties, state);\r\n    };\r\n\r\n    public createFrom({ id = null, properties = {} }: UserData, state?: string): UserObject {\r\n        return this.createFrom({ id, properties }, state);\r\n    };\r\n\r\n    public createNull(id: string) {\r\n        return new UserObject(id);\r\n    }\r\n\r\n    constructor(id: string | null = null, properties: User | {} = {}, state?: string) {\r\n        if (\"username\" in properties) {\r\n            properties.bot = properties.bot === undefined && id ? false : properties.bot;\r\n            properties.status = properties.status === undefined && id ? STATUSS.ONLINE : properties.status;\r\n        };\r\n\r\n        const references = new Data_Structures.List<Reference>().add({ dataType: \"profiles\", object: ProfileObject.createNull, selfName: \"profile\", columnName: \"id\", dependsOn: true, list: false })\r\n            .add({\r\n                dataType: \"activities\", selfName: \"activity\", columnName: \"user\", dependsOn: true, list: false, defaultValues: {\r\n                    name: \"activities\", values: {\r\n                        name: \"\",\r\n                        type: 0,\r\n                        get id() {\r\n                            return Generator.Ids.generate();\r\n                        },\r\n                        icon: \"\",\r\n                        image: \"\",\r\n                        banner: \"\",\r\n                        timeSpent: \"1-2-2023 13:22:\",\r\n                        user: \"\",\r\n                    }\r\n                }\r\n            })\r\n            .add({ dataType: \"maps\", selfName: \"\", columnName: \"creator\", dependsOn: true, list: true })\r\n            .add({ dataType: \"user_roles\", object: UserRoleObject.createNull, selfName: \"roles\", columnName: \"id\", dependsOn: true, list: true });\r\n        super(\"users\", id, properties, state, references);//UserRoleObject\r\n        this.username = \"username\" in properties ? properties.username : \"\";\r\n        this.createFrom.bind(this);\r\n\r\n    };\r\n\r\n    getUsername(): string {\r\n        return this.username;\r\n    };\r\n\r\n    comparePasswords(password: string): boolean {\r\n        const properties = this.properties\r\n        return \"password\" in properties && properties.password === password;\r\n    };\r\n    \r\n};\r\n\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA4B;AAC5B,uBAAsB;AACtB,sBAAoC;AACpC,2BAA0B;AAC1B,4BAA2B;AAEpB,IAAK;AAAL,UAAK,UAAL;AACH,uBAAS;AACT,wBAAU;AACV,oBAAM;AACN,oBAAM;AAAA,GAJE;AAKX;AAWA;AAYA;AAMA;AAED,yBAAwC,wBAA2B;AAAA,EAEvD;AAAA,SAEM,WAAW,EAAE,KAAK,MAAM,aAAa,MAAgB,OAA4B;AAC3F,WAAO,IAAI,WAAW,IAAI,YAAY;AAAA;AAAA,EAGnC,WAAW,EAAE,KAAK,MAAM,aAAa,MAAgB,OAA4B;AACpF,WAAO,KAAK,WAAW,EAAE,IAAI,cAAc;AAAA;AAAA,EAGxC,WAAW,IAAY;AAC1B,WAAO,IAAI,WAAW;AAAA;AAAA,EAG1B,YAAY,KAAoB,MAAM,aAAwB,IAAI,OAAgB;AAC9E,QAAI,cAAc,YAAY;AAC1B,iBAAW,MAAM,WAAW,QAAQ,UAAa,KAAK,QAAQ,WAAW;AACzE,iBAAW,SAAS,WAAW,WAAW,UAAa,KAAK,QAAQ,SAAS,WAAW;AAAA;AAC3F;AAED,UAAM,aAAa,IAAI,mBAAgB,OAAkB,IAAI,EAAE,UAAU,YAAY,QAAQ,6BAAc,YAAY,UAAU,WAAW,YAAY,MAAM,WAAW,MAAM,MAAM,SAChL,IAAI;AAAA,MACD,UAAU;AAAA,MAAc,UAAU;AAAA,MAAY,YAAY;AAAA,MAAQ,WAAW;AAAA,MAAM,MAAM;AAAA,MAAO,eAAe;AAAA,QAC3G,MAAM;AAAA,QAAc,QAAQ;AAAA,UACxB,MAAM;AAAA,UACN,MAAM;AAAA,cACF,KAAK;AACL,mBAAO,yBAAU,IAAI;AAAA;AAAA,UAEzB,MAAM;AAAA,UACN,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,WAAW;AAAA,UACX,MAAM;AAAA;AAAA;AAAA,OAIjB,IAAI,EAAE,UAAU,QAAQ,UAAU,IAAI,YAAY,WAAW,WAAW,MAAM,MAAM,QACpF,IAAI,EAAE,UAAU,cAAc,QAAQ,8BAAe,YAAY,UAAU,SAAS,YAAY,MAAM,WAAW,MAAM,MAAM;AAClI,UAAM,SAAS,IAAI,YAAY,OAAO;AACtC,SAAK,WAAW,cAAc,aAAa,WAAW,WAAW;AACjE,SAAK,WAAW,KAAK;AAAA;AAAA,EAIzB,cAAsB;AAClB,WAAO,KAAK;AAAA;AAAA,EAGhB,iBAAiB,UAA2B;AACxC,UAAM,aAAa,KAAK;AACxB,WAAO,cAAc,cAAc,WAAW,aAAa;AAAA;AAAA;AAGlE;",
  "names": []
}
