{
  "version": 3,
  "sources": ["../../../src/rest/RESTApi.ts"],
  "sourcesContent": ["import sha256 from \"sha256\";\r\nimport Database from \"./database/Database.js\";\r\nimport express from \"express\";\r\nimport crypto from \"crypto\";\r\n\r\nexport default class RESTApi {\r\n    private _genKey: number[];\r\n    private database: Database;\r\n\r\n    constructor(_genKey: string) {\r\n        this._genKey = sha256(_genKey, { asBytes: true });\r\n        console.log(_genKey, \"api key\");\r\n        this.database = new Database(new Database.Client());\r\n        this.hasAccess.bind(this);\r\n        this.verify.bind(this);\r\n        this.decrypt.bind(this);\r\n    }\r\n\r\n    decrypt = (data : string) => {\r\n        const iv = Buffer.from([\r\n            137, 69, 171, 8, 102, 75,\r\n            142, 106, 211, 142, 113, 48,\r\n            239, 56, 38, 26\r\n        ]);\r\n        const decipher = crypto.createDecipheriv('aes-256-cbc', Buffer.from(this._genKey), iv);\r\n        let decryptedData = decipher.update(data, \"hex\", \"utf-8\");\r\n        decryptedData += decipher.final(\"utf8\");\r\n        return decryptedData;\r\n    };\r\n\r\n    public hasAccess(key: string): boolean {\r\n        return key === this._genKey.toString();\r\n    }\r\n\r\n    public verify(req: express.Request): boolean {\r\n        //verify request data..\r\n        return true;\r\n    };\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,oBAAmB;AACnB,sBAAqB;AAErB,oBAAmB;AAEnB,cAA6B;AAAA,EACjB;AAAA,EACA;AAAA,EAER,YAAY,SAAiB;AACzB,SAAK,UAAU,2BAAO,SAAS,EAAE,SAAS;AAC1C,YAAQ,IAAI,SAAS;AACrB,SAAK,WAAW,IAAI,wBAAS,IAAI,wBAAS;AAC1C,SAAK,UAAU,KAAK;AACpB,SAAK,OAAO,KAAK;AACjB,SAAK,QAAQ,KAAK;AAAA;AAAA,EAGtB,UAAU,CAAC,SAAkB;AACzB,UAAM,KAAK,OAAO,KAAK;AAAA,MACnB;AAAA,MAAK;AAAA,MAAI;AAAA,MAAK;AAAA,MAAG;AAAA,MAAK;AAAA,MACtB;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACzB;AAAA,MAAK;AAAA,MAAI;AAAA,MAAI;AAAA;AAEjB,UAAM,WAAW,sBAAO,iBAAiB,eAAe,OAAO,KAAK,KAAK,UAAU;AACnF,QAAI,gBAAgB,SAAS,OAAO,MAAM,OAAO;AACjD,qBAAiB,SAAS,MAAM;AAChC,WAAO;AAAA;AAAA,EAGJ,UAAU,KAAsB;AACnC,WAAO,QAAQ,KAAK,QAAQ;AAAA;AAAA,EAGzB,OAAO,KAA+B;AAEzC,WAAO;AAAA;AAAA;",
  "names": []
}
