{
  "version": 3,
  "sources": ["../../../src/classes/RequestHandler.ts"],
  "sourcesContent": ["import express from \"express\";\r\nimport Data_Structures from \"../../Data-Structures/src\";\r\n\r\nexport type JsNumber = { type: \"number\", value: { min: number, max: number, possibilities: number[] }, required?: boolean, canBeNull?: boolean, defaults: number };\r\nexport type JsString = { type: \"string\", value: { minLength: number, maxLength: number, length: number, regexs: RegExp[] }, required?: boolean, canBeNull?: boolean, defaults: string };\r\nexport type JsBoolean = { type: \"boolean\", value: {}, required?: boolean, canBeNull?: boolean, defaults: boolean };\r\nexport type JsObject = RequestBody;\r\nexport type JsList = Data_Structures.List<JsObject>;\r\n\r\nexport type RequestBody = { key: JsNumber | JsString | JsBoolean | JsObject | JsList };\r\n\r\nexport default abstract class RequestHandler {\r\n\r\n    protected request: express.Request;\r\n    protected response: express.Response;\r\n    protected next: express.NextFunction;\r\n\r\n\r\n    constructor(req: express.Request, res: express.Response, next: express.NextFunction) {\r\n        this.request = req;\r\n        this.response = res;\r\n        this.next = next;\r\n        this.call.bind(this);\r\n        const result = this.validateRequestBody();\r\n        if (result) this.call();\r\n    }\r\n    \r\n    abstract getRequestBody(): RequestBody;\r\n\r\n    public abstract call(): any; // call the handler\r\n\r\n    private validateRequestBody(): express.Response | true {\r\n        //\r\n        return true;\r\n    };\r\n}"],
  "mappings": ";;;;;;;AAAA;AAAA;AAAA;AAWA,qBAA6C;AAAA,EAE/B;AAAA,EACA;AAAA,EACA;AAAA,EAGV,YAAY,KAAsB,KAAuB,MAA4B;AACjF,SAAK,UAAU;AACf,SAAK,WAAW;AAChB,SAAK,OAAO;AACZ,SAAK,KAAK,KAAK;AACf,UAAM,SAAS,KAAK;AACpB,QAAI;AAAQ,WAAK;AAAA;AAAA,EAOb,sBAA+C;AAEnD,WAAO;AAAA;AAAA;",
  "names": []
}
